% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BoostedStacking.R
\name{makeBoostedStackingLearner}
\alias{makeBoostedStackingLearner}
\title{Create a BoostedStacking object.}
\usage{
makeBoostedStackingLearner(model.multiplexer = mm, predict.type = "prob",
  resampling = cv2, mm.ps = ps, control = ctrl, measures = mmce,
  niter = 2L)
}
\arguments{
\item{model.multiplexer}{[\code{\link{ModelMultiplexer}}]\cr
The muliplexer learner.}

\item{predict.type}{[\code{character(1)}]\cr 
Classification: \dQuote{response} (= labels) or \dQuote{prob} (= probabilities and labels by selecting the ones with maximal probability).
Regression: \dQuote{response} (= mean response) or \dQuote{se} (= standard errors and mean response).}

\item{resampling}{[\code{\link{ResampleDesc}} \cr
 Resampling strategy.
 par.set [\code{\link[ParamHelpers]{ParamSet}}]\cr
@param mm.ps Collection of parameters and their constraints for optimization.
 Dependent parameters with a \code{requires} field must use \code{quote} and not
 \code{expression} to define it.}

\item{control}{[\code{\link{TuneControlRandom}}]\cr
Control object for search method.}

\item{niter}{[\code{integer}]\cr
Number of boosting iterations.}

\item{measure}{[\code{\link{Measure}}]\cr
Performance measure.}
}
\description{
Short descrition of boosted Stacking here!
}
\examples{
 lrns = list(
   #makeLearner("classif.ksvm", kernel = "rbfdot"), # no implm for response and multiclass
   makeLearner("classif.gbm"),
   makeLearner("classif.randomForest"))
 mm = makeModelMultiplexer(lrns)
 ctrl = makeTuneControlRandom(maxit = 3L)
 ps = makeModelMultiplexerParamSet(mm,
   makeIntegerParam("n.trees", lower = 1L, upper = 500L),
   makeIntegerParam("interaction.depth", lower = 1L, upper = 10L),
   makeIntegerParam("ntree", lower = 1L, upper = 500L),
   makeIntegerParam("mtry", lower = 1L, upper = getTaskNFeats(tsk)))
 lrns = lapply(lrns, setPredictType, bpt)
 stb = makeBoostedStackingLearner(model.multiplexer = mm, 
   predict.type = spt, resampling = cv5, mm.ps = ps, control = ctrl, 
   measures = mmce, niter = 2L)
 r = resample(stb, task = tsk, resampling = cv2)

}

